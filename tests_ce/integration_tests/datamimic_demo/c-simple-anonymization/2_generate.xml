<setup multiprocessing="True">
    <!--  Simple use script to mask the key we need-->
    <generate name="CUSTOMER" source="sourceDB" type="CUSTOMER"
              target="targetDB, ConsoleExporter">
        <key name="name" script="name+'_mask'"/>
    </generate>
    <!--  Simple use script to mask the key we need-->
    <generate source="sourceDB" name="USER" target="targetDB, ConsoleExporter">
        <key name="full_name" script="full_name + '_mask'"/>
        <!-- Use the default mask converter to mask into '*' (default char) -->
        <key name="email" script="email" converter="Mask"/>
        <!-- Optionally can pass a character you prefer -->
        <key name="tc_creation_src" converter="Mask('!')" script="tc_creation_src"/>
    </generate>

    <generate
            name="ObfuscateCSV" type="ObfuscateCSV" source="data/persons.ent.csv"
            target="ConsoleExporter">
        <variable name="addr" entity="Address"/>
        <!-- Cut the length of string from the begin -->
        <key name="familyName" script="familyName" converter="CutLength(3)"/>
        <key name="givenName" script="givenName" converter="Mask"/>
        <key name="alias" script="alias" converter="Append('_demo')"/>
        <key name="street" script="addr.street"/>
        <key name="city" script="addr.city"/>
        <key name="country" constant="US"/>
        <key name="accountNo" script="accountNo" converter="Hash('sha256', 'hex')"/>
        <key name="ssn" script="ssn" converter="MiddleMask(2,3)"/>
        <key name="creditCardNo" script="creditCardNo"
             converter="Hash('sha1', 'base64')"/>
        <key name="secret1" script="secret1" converter="Hash('md5', 'hex')"/>
        <key name="secret2" script="secret2" converter="Hash('md5', 'base64')"/>
        <key name="secret3" script="secret3" converter="Hash('sha1','hex')"/>
        <key name="secret4" script="secret4" converter="Hash('sha1', 'base64')"/>
        <!--  TODO: RushHash-->
        <!-- <key name="secret5" converter="JavaHash"/> -->
    </generate>
</setup>
