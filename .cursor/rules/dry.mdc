---
description: DRY (Don’t Repeat Yourself)
globs: 
alwaysApply: true
---
You are generating code that follows the DRY principle. Adhere to these guidelines:
1. ELIMINATE duplication by centralizing common functionality:
    * Maintain a single source of truth for knowledge/logic
    * Extract repeated code into reusable functions/modules
    * Centralize configuration and constants
    * Apply abstraction for similar operations
2. IMPLEMENTATION guidelines:
    * Create utility functions for common operations
    * Use inheritance or mixins for shared behavior
    * Implement templates/generics for similar data structures
    * Follow the “Rule of Three” before abstracting (wait until code is duplicated 3+ times)
3. VALIDATION criteria:
    * No copy-pasted code across the codebase
    * Changes can be made in a single location
    * Common operations use shared implementations
    * Configuration values are centralized
4. EXAMPLE structure:
    * Utility classes for common operations
    * Shared validation functions across forms
    * Centralized error handling
    * Template methods for similar processes