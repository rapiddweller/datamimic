---
description: Single Responsibility Principle (SRP)
globs: 
alwaysApply: true
---
You are generating code that follows the Single Responsibility Principle. Adhere to these guidelines:
1. ENSURE each component has exactly ONE reason to change:
    * Classes/modules should focus on a single capability
    * Functions should perform one logical operation
    * Avoid “god” classes that handle multiple concerns
    * Split components with “and” in their purpose description
2. IMPLEMENTATION guidelines:
    * Name classes/modules after their single responsibility
    * Keep components small and focused (<200 lines recommended)
    * Use dependency injection for required services
    * Extract unrelated functionality into separate components
3. VALIDATION criteria:
    * Component name clearly describes its sole purpose
    * All methods relate to the primary responsibility
    * Changes to one feature don’t affect unrelated functionality
    * Component has minimal external dependencies
4. EXAMPLE structure:
    * UserAuthenticator: ONLY handles authentication
    * PaymentProcessor: ONLY handles payment operations
    * DataValidator: ONLY validates input data
    * NotificationSender: ONLY sends notifications
